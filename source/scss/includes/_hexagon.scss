$sqrt2: 1.41421356237;
$sqrt3: 1.73205080757;
$scaleFactor: 0.57735026919; // = tan(30deg) *this smushes a square into a 60deg/120deg rhombus

@mixin hexagon($width, $color, $borderWidth, $borderColor, $shadow) {
    $border: 0 !default;
    $shadow: '' !default;
    $height: $width/$sqrt3;
    $capWidth: $width/$sqrt2; // caps being the top and bottom rhombuses
    $border: solid #{$borderWidth}px #{$borderColor};
    $capBorder: solid #{$borderWidth*$sqrt2}px #{$borderColor};
    position: relative;
	display: flex;
	flex-direction: column;
    align-items: center;
    justify-content: center;
	width: #{$width}px;
	height: #{$height}px;
	margin: #{$height/2}px 0;
	background-color: $color;
	border-left: $border;
	border-right: $border;
	transition: 300ms;
	
	@if ($shadow != "") {
		box-shadow: $shadow;
	}

	&::before,
	&::after {
		content: "";
		position: absolute;
		z-index: 1;
		width: #{$capWidth}px;
		height: #{$capWidth}px;
		transform: scaleY(#{$scaleFactor}) rotate(-45deg);
		background-color: inherit;
		left: #{($width - $capWidth)/2 - $borderWidth}px; //offset by half the difference in 
		transition: border-color 300ms;

		@if ($shadow != "") {
			box-shadow: $shadow;
		}
	}

	&::before {
		top: #{-$width/$sqrt2/2}px;  //half the rhombus height
		border-top: $capBorder;
		border-right: $capBorder;
	}

	&::after {
		bottom: #{-$width/$sqrt2/2}px; //half the rhombus height
		border-bottom: $capBorder;
		border-left: $capBorder;
	}

	//cover up extra shadows
	@if ($shadow != "") {
		span {
			display: block;
			position: absolute;
			top: #{$borderWidth*$scaleFactor}px;
			left: 0;
			width: #{$width - $borderWidth*2}px;
			height: #{$height - $borderWidth*$scaleFactor*2}px;
			z-index: 2;
			background: inherit;
		}
	}

	*{
		z-index: 2;
	}
}